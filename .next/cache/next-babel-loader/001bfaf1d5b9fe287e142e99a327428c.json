{"ast":null,"code":"//alert(calcCrow(59.3293371,13.4877472,59.3225525,13.4619422).toFixed(1));\n// Converts numeric degrees to radians\nfunction toRad(Value) {\n  return Value * Math.PI / 180;\n} //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\n\n\nexport function distance(lat1, lon1, lat2, lon2) {\n  var R = 6371; // km\n\n  var dLat = toRad(lat2 - lat1);\n  var dLon = toRad(lon2 - lon1);\n  var lat1 = toRad(lat1);\n  var lat2 = toRad(lat2);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n}","map":{"version":3,"sources":["C:/Users/jhony/Documents/mydailystatus/lib/geo.js"],"names":["toRad","Value","Math","PI","distance","lat1","lon1","lat2","lon2","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d"],"mappings":"AAAA;AAEI;AACA,SAASA,KAAT,CAAeC,KAAf,EACA;AACI,SAAOA,KAAK,GAAGC,IAAI,CAACC,EAAb,GAAkB,GAAzB;AACH,C,CAGD;;;AACA,OAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,IAArC,EACP;AACE,MAAIC,CAAC,GAAG,IAAR,CADF,CACgB;;AACd,MAAIC,IAAI,GAAGV,KAAK,CAACO,IAAI,GAACF,IAAN,CAAhB;AACA,MAAIM,IAAI,GAAGX,KAAK,CAACQ,IAAI,GAACF,IAAN,CAAhB;AACA,MAAID,IAAI,GAAGL,KAAK,CAACK,IAAD,CAAhB;AACA,MAAIE,IAAI,GAAGP,KAAK,CAACO,IAAD,CAAhB;AAEA,MAAIK,CAAC,GAAGV,IAAI,CAACW,GAAL,CAASH,IAAI,GAAC,CAAd,IAAmBR,IAAI,CAACW,GAAL,CAASH,IAAI,GAAC,CAAd,CAAnB,GACNR,IAAI,CAACW,GAAL,CAASF,IAAI,GAAC,CAAd,IAAmBT,IAAI,CAACW,GAAL,CAASF,IAAI,GAAC,CAAd,CAAnB,GAAsCT,IAAI,CAACY,GAAL,CAAST,IAAT,CAAtC,GAAuDH,IAAI,CAACY,GAAL,CAASP,IAAT,CADzD;AAEA,MAAIQ,CAAC,GAAG,IAAIb,IAAI,CAACc,KAAL,CAAWd,IAAI,CAACe,IAAL,CAAUL,CAAV,CAAX,EAAyBV,IAAI,CAACe,IAAL,CAAU,IAAEL,CAAZ,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGT,CAAC,GAAGM,CAAZ;AACA,SAAOG,CAAP;AACD","sourcesContent":["//alert(calcCrow(59.3293371,13.4877472,59.3225525,13.4619422).toFixed(1));\r\n\r\n    // Converts numeric degrees to radians\r\n    function toRad(Value) \r\n    {\r\n        return Value * Math.PI / 180;\r\n    }\r\n\r\n\r\n    //This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\r\n    export function distance (lat1, lon1, lat2, lon2) \r\n    {\r\n      var R = 6371; // km\r\n      var dLat = toRad(lat2-lat1);\r\n      var dLon = toRad(lon2-lon1);\r\n      var lat1 = toRad(lat1);\r\n      var lat2 = toRad(lat2);\r\n\r\n      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n      var d = R * c;\r\n      return d;\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}